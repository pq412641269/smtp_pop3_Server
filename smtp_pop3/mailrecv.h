#ifndef MAILRECV_H
#define MAILRECV_H

#include "parsemail.h"
#include "decode64.h"
#include "comm.h"

/*----------------------------------------
 *描述：获取smtp锁步流程中的用户名
 *参数：sockfd 套接字 *p 用户表格
 *返回值：成功返回0 失败返回 -1
----------------------------------------*/
int getusername(int sockfd,struct table *p);	//SMTP

/*----------------------------------------
 *描述：获取smtp锁步流程中的密码
 *参数：sockfd 套接字 *p 邮件信息
 *返回值：成功返回0 失败返回 -1
----------------------------------------*/
int getpassword(int sockfd,struct table *p);

/*----------------------------------------
 *描述：获取smtp锁步流程中的发送方邮件地址
 *参数：sockfd 套接字 *pmail 邮件结构提
 *返回值：成功返回0 失败返回 -1
----------------------------------------*/
int getfromaddress(int sockfd,struct mail *pmail); 

/*----------------------------------------
 *描述：获取smtp锁步流程中的接收方邮件地址
 *参数：sockfd 套接字 pmail 邮件结构体
 *返回值：成功返回0 失败返回 -1
----------------------------------------*/
int gettoaddress(int sockfd,struct mail *pmail); 

/*----------------------------------------
 *描述：获取smtp锁步流程中的邮件正文
 *参数：sockfd 套接字 pmail 用户表格
 *返回值：成功返回0 失败返回 -1
----------------------------------------*/
int getbody(int sockfd,struct mail *pmail); 

/*----------------------------------------
 *描述: 截取邮件附件
 *参数：sockfd 套接字 pmail 用户表格
 *返回值：成功返回0 失败返回 -1
----------------------------------------*/
int getslave(int sockfd,struct mail *pmail); 

/*----------------------------------------
 *描述：获取pop锁步流程中的用户名
 *参数：sockfd 套接字 *p 用户表格
 *返回值：成功返回0 失败返回 -1
----------------------------------------*/
int getuser_pop(int sockfd,struct table *p);        //POP3

/*----------------------------------------
 *描述：获取pop锁步流程中的密码
 *参数：sockfd 套接字 *p 用户表格
 *返回值：成功返回0 失败返回 -1
----------------------------------------*/
int getpass_pop(int sockfd, struct table *p);

/*----------------------------------------
 *描述：pop线程执行函数
 *参数：args 传入的参数
 *返回值：返回空类型
----------------------------------------*/
void *pop_pthread_fun(void *args);

/*----------------------------------------
 *描述：smtp线程执行函数
 *参数：args 传入的参数
 *返回值：返回空类型
----------------------------------------*/
void *smtp_pthread_fun(void *args);

#endif
